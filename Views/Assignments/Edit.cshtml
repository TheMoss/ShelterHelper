@model ShelterHelper.ViewModels.AssignmentViewModel;

@{
	ViewData["Title"] = "Edit";
	var prioritiesList = new SelectList(new List<SelectListItem>
	{
		new SelectListItem { Text = "Low", Value = "0" },
		new SelectListItem { Text = "Medium", Value = "1" },
		new SelectListItem { Text = "High", Value = "2" },
		new SelectListItem { Text = "Very high", Value = "3" }
	}, "Value", "Text");
}

<h1>Edit</h1>

<h4>Assignment</h4>
<hr/>
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit" method="post">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="Assignment.AssignmentId"/>
			<div class="form-group">
				<label asp-for="Assignment.Title" class="control-label"></label>
				<input asp-for="Assignment.Title" class="form-control"/>
				<span asp-validation-for="Assignment.Title" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Assignment.Description" class="control-label"></label>
				<input asp-for="Assignment.Description" class="form-control"/>
				<span asp-validation-for="Assignment.Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Assignment.Priority" class="control-label"></label>
				@Html.DropDownListFor(model=> model.Assignment.Priority, prioritiesList, "Select priority level", new { @class = "form-control" })

				<span asp-validation-for="Assignment.Priority" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Assignment.CreatorId" class="control-label"></label>
				<input asp-for="Assignment.CreatorId" class="form-control"/>
				<span asp-validation-for="Assignment.CreatorId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Assignment.CreationDate" class="control-label"></label>
				<input asp-for="Assignment.CreationDate" class="form-control"/>
				<span asp-validation-for="Assignment.CreationDate" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label asp-for="EmployeesList" class="control-label">Assigned Employees</label>
				@Html.DropDownListFor(model => model.SelectedEmployeesIds, new SelectList(Model.EmployeesList, nameof(Employee.EmployeeId), (nameof(Employee.EmployeeName))), new { @class = "form-control", id = "employee-multiselect", multiple = "multiple" })
				<span asp-validation-for="EmployeesList" class="text-danger"></span>
			</div>

			<div class="form-group">
				<label asp-for="Assignment.IsCompleted" class="control-label"></label>
				<input type="radio" asp-for="Assignment.IsCompleted" value="true" id="completedTrue"/>
				<label for="completedTrue">Completed</label>
				<input type="radio" asp-for="Assignment.IsCompleted" value="false" id="completedFalse"/>
				<label for="completedFalse">Not completed</label>
				<span asp-validation-for="Assignment.IsCompleted" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Assignment.IsInProgress" class="control-label"></label>
				<input type="radio" asp-for="Assignment.IsInProgress" value="true" id="inProgressTrue"/>
				<label for="inProgressTrue">In progress</label>
				<input type="radio" asp-for="Assignment.IsInProgress" value="false" id="inProgressFalse"/>
				<label for="inProgressFalse">Not in progress</label>
				<span asp-validation-for="Assignment.IsInProgress" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save changes" class="btn btn-primary"/>
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

<script>
	$(document).ready(function () {
		const completedTrue = document.getElementById("completedTrue");
		if (completedTrue != null) {
			completedTrue.addEventListener("click", function () {

				var inProgressTrue = document.getElementById("inProgressTrue");
				var inProgressFalse = document.getElementById("inProgressFalse");

				if (completedTrue.checked === true) {
					inProgressFalse.checked = true;

					inProgressFalse.disabled = true;
					inProgressTrue.disabled = true;
				}
			})
		}


		const completedFalse = document.getElementById("completedFalse");
		if (completedFalse != null) {
			completedFalse.addEventListener("click", function () {
				var inProgressTrue = document.getElementById("inProgressTrue");
				var inProgressFalse = document.getElementById("inProgressFalse");

				if (completedFalse.checked === true) {

					inProgressFalse.disabled = false;
					inProgressTrue.disabled = false;
				}
			})
		}
		$('#employee-multiselect').select2();
	});
</script>