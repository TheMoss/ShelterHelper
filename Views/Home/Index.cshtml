@model IEnumerable<Animal>;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@{
	ViewData["Title"] = "Home Page";
	var pagedList = (IPagedList)ViewBag.AnimalsPagedList;
}

<div class="contents">
	
	<h1>Animals</h1>

	<p>
		<a asp-controller="Home" asp-action="Create">Add a new animal</a>
	</p>
		<table class="table">
			<thead>
				<tr>

					<th>@Html.DisplayNameFor(model => model.Name)</th>
					<th>@Html.ActionLink("Species", "Index", new { sortOrder = ViewBag.AnimalsSortParm })</th>
					<th>@Html.ActionLink("Sex", "Index", new { sortOrder = ViewBag.SexParam })</th>
					<th>@Html.DisplayNameFor(model => model.Weight)</th>
					<th>@Html.ActionLink("Admission day", "Index", new { sortOrder = ViewBag.AdmissionParam })</th>
					<th>@Html.ActionLink("Adoption day", "Index", new { sortOrder = ViewBag.AdoptionParam })</th>
					<th>@Html.DisplayNameFor(model => model.Health)</th>
					<th>@Html.ActionLink("Employee ID", "Index", new { sortOrder = ViewBag.EmployeeParam })</th>
				</tr>
			</thead>

			<tbody>
				@foreach (var animal in ViewBag.AnimalsPagedList)
				{
					<tr>
						<td>@animal.Name</td>
						<td>@animal.Species.SpeciesName</td>
						<td>@animal.Sex</td>
						<td>@animal.Weight</td>
						<td>@animal.AdmissionDay</td>
						<td>
							@if (animal.AdoptionDay.Equals(new DateOnly(1900, 1, 1)))
							{
								@("Not adopted yet")
							}
							else
							{
								@animal.AdoptionDay
							}
						</td>
						<td>@animal.Health</td>
						<td>@animal.EmployeeId</td>
						<td>
							<a asp-action="Edit" asp-route-id="@animal.Id">Edit</a> |
							<a asp-action="Delete" asp-route-id="@animal.Id">Delete</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	@Html.PagedListPager((pagedList), page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentAnimalSortOrder }))
	</div>
